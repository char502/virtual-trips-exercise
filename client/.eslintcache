[{"E:\\OneDrive\\Web_Projects\\virtualtrips\\client\\src\\reportWebVitals.js":"1","E:\\OneDrive\\Web_Projects\\virtualtrips\\client\\src\\App.js":"2","E:\\OneDrive\\Web_Projects\\virtualtrips\\client\\src\\components\\DataFetching.js":"3","E:\\OneDrive\\Web_Projects\\virtualtrips\\client\\src\\index.js":"4"},{"size":362,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":218,"mtime":1611940995697,"results":"7","hashOfConfig":"6"},{"size":3237,"mtime":1612093468539,"results":"8","hashOfConfig":"6"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"11v6d26",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"E:\\OneDrive\\Web_Projects\\virtualtrips\\client\\src\\reportWebVitals.js",[],["22","23"],"E:\\OneDrive\\Web_Projects\\virtualtrips\\client\\src\\App.js",[],["24","25"],"E:\\OneDrive\\Web_Projects\\virtualtrips\\client\\src\\components\\DataFetching.js",["26"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport LoadingBar from 'react-top-loading-bar';\r\n// import 'react-loading-bar/dist/index.css';\r\n\r\nconst DataFetching = () => {\r\n  const [searchLocation, setSearchLocation] = useState('');\r\n  const [locationData, setLocationData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(0);\r\n\r\n  const handleChange = e => {\r\n    let search = e.target.value;\r\n\r\n    // let alphaOnly = /'^[a-zA-Z]*$'/;\r\n    // if (alphaOnly.test(search)) {\r\n    // }\r\n\r\n    if (search.length !== 0) {\r\n      let result = search.charAt(0).toUpperCase() + search.slice(1);\r\n\r\n      setSearchLocation(result);\r\n    }\r\n  };\r\n\r\n  //   const handleSubmit = e => {\r\n  //     e.preventDefault();\r\n\r\n  //     setSearchLocation(searchLocation);\r\n  //   };\r\n\r\n  const handleClearSearch = () => {\r\n    setSearchLocation('');\r\n  };\r\n\r\n  // GET /locations?q=query\r\n  // Where query will be a partial name of a location. For example\r\n  // GET /locations?q=hastin\r\n\r\n  useEffect(() => {\r\n    let link = '';\r\n    searchLocation && searchLocation.length > 2\r\n      ? (link = `/get_data_GB/locations?q=${searchLocation}%`)\r\n      : (link = `/get_data_GB/locations?q=${searchLocation}`);\r\n\r\n    axios\r\n      .get(link, setIsLoading(isLoading + 10))\r\n      .then(res => {\r\n        setLocationData(res.data.locations);\r\n        setIsLoading(isLoading + 100);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        setIsLoading(isLoading + 50);\r\n      });\r\n  }, [searchLocation]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <LoadingBar\r\n          color='lightseagreen'\r\n          progress={isLoading + 1}\r\n          onLoaderFinished={() => setIsLoading(0)}\r\n        />\r\n      </div>\r\n\r\n      <div style={{ padding: '20px' }}>\r\n        {/* <form onSubmit={handleSubmit}> */}\r\n        <input\r\n          type='text'\r\n          name='searchTerm'\r\n          value={searchLocation}\r\n          onChange={handleChange}\r\n          placeholder={'Search for Point of Interest'}\r\n        />\r\n        {/* <button type='submit'>Search</button> */}\r\n        <div>\r\n          <button onClick={handleClearSearch}>Clear Search</button>\r\n        </div>\r\n        {/* </form> */}\r\n\r\n        <div\r\n          style={{\r\n            backgroundColor: 'lightBlue',\r\n            maxWidth: '750px',\r\n            margin: '0 auto',\r\n          }}\r\n        >\r\n          {locationData.map(location => {\r\n            return (\r\n              <div key={location.geonameid}>\r\n                <ul>\r\n                  <li style={{ listStyleType: 'none' }}>\r\n                    <span style={{ fontWeight: 'bold' }}>NAME:</span>{' '}\r\n                    {location.name}{' '}\r\n                    <span>\r\n                      <span style={{ fontWeight: 'bold' }}>LAT:</span>{' '}\r\n                      {location.latitude}\r\n                    </span>{' '}\r\n                    <span>\r\n                      <span style={{ fontWeight: 'bold' }}>LON:</span>{' '}\r\n                      {location.longitude}\r\n                    </span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataFetching;\r\n","E:\\OneDrive\\Web_Projects\\virtualtrips\\client\\src\\index.js",[],["27","28"],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"29","replacedBy":"33"},{"ruleId":"31","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":55,"column":6,"nodeType":"37","endLine":55,"endColumn":22,"suggestions":"38"},{"ruleId":"29","replacedBy":"39"},{"ruleId":"31","replacedBy":"40"},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],["41"],["42"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoading'. Either include it or remove the dependency array. You can also do a functional update 'setIsLoading(i => ...)' if you only need 'isLoading' in the 'setIsLoading' call.","ArrayExpression",["43"],["41"],["42"],"no-global-assign","no-unsafe-negation",{"desc":"44","fix":"45"},"Update the dependencies array to be: [isLoading, searchLocation]",{"range":"46","text":"47"},[1520,1536],"[isLoading, searchLocation]"]